# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  myjob:
  
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      # Due to deployment dependencies the order is important: max-parallel=1
      max-parallel: 1
      # Stop execution of deployment jobs on first error: fail-fast=true
      fail-fast: true
      matrix:
        purpose: [test1, test2]
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      - name: JobA (only test2)
        if: matrix.purpose == 'test2'
        run: |
          echo "failing on purpose"
          echo "::set-output name=exit_code::$(echo -n "$?")"
          exit 1
          
      - name: JobB
        id: seedBuild
        run: |
          echo "::set-output name=exit_code::$(echo -n "$?")"
      - name: Debug Job Failure
        if: failure() 
        #if: "${{ steps.seedBuild.outputs.exit_code != 0 || steps.allJobs.outputs.exit_code != 0 }}"
        env: 
          STEPS_CONTEXT: '${{ toJson(steps) }}'
          RUNNER_CONTEXT: '${{ toJson(runner) }}'
          STRATEGY_CONTEXT: '${{ toJson(strategy) }}'
          MATRIX_CONTEXT: '${{ toJson(matrix) }}'
          GITHUB_CONTEXT: '${{ toJson(github) }}'
        run: |
          echo "******** Job Logs from ********"
          echo "$STEPS_CONTEXT"
          echo "$RUNNER_CONTEXT"
          echo "$STRATEGY_CONTEXT"
          echo "$MATRIX_CONTEXT"
          echo "$GITHUB_CONTEXT"
        
  
  
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      #- uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

  myjob-alert:
    needs: [myjob]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    if: failure()
    steps:
  
      - name: Debug Job Failure 2
        
        env: 
          STEPS_CONTEXT: '${{ toJson(steps) }}'
          RUNNER_CONTEXT: '${{ toJson(runner) }}'
          STRATEGY_CONTEXT: '${{ toJson(strategy) }}'
          MATRIX_CONTEXT: '${{ toJson(matrix) }}'
          GITHUB_CONTEXT: '${{ toJson(github) }}'
        run: |
          echo "******** Job Logs from ********"
          echo "$STEPS_CONTEXT"
          echo "$RUNNER_CONTEXT"
          echo "$STRATEGY_CONTEXT"
          echo "$MATRIX_CONTEXT"
          echo "$GITHUB_CONTEXT"
